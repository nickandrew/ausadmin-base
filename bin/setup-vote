#!/usr/bin/perl
#	@(#) setup-vote: Create appropriate control files for running votes
#	Usage: setup-vote newsgroup-list ...
#
# $Source$
# $Revision$
# $Date$
#

=head1 NAME

setup-vote - Create the control files for running a vote

=head1 SYNOPSIS

cd ~ausadmin
setup-vote newsgroup-name ...

=head1 DESCRIPTION

A vote is started if certain control files exist in the vote/newsgroup
directory. These control files are:

	vote_start.cfg (contains the timestamp of the vote start time)
	endtime.cfg (contains the timestamp of the vote cutoff time)
	voterule (the parameters against which this ballot will be judged)

This program creates endtime.cfg for the chosen newsgroups
if it does not already exist.
The duration of the vote is taken from the first file found:

	vote/$newsgroup/voteperiod (duration in days)
	config/voteperiod

The automated vote taker can accept a vote as soon as endtime.cfg
exists (it must contain a timestamp later than the current time).

After this program has been run, use mkcfv.pl to create the
pgp-signed Call-For-Votes (CFV) message and post it, so everybody
knows they can vote.

=cut

use Time::Local;
use lib 'perllib';
use Vote;

die "This script is deprecated";

my $BaseDir = "./vote";

my $VotePeriod;
my $count = 0;

die "No vote subdirectory (must cd to ~ausadmin)" if (!-d $BaseDir);

my @newsgroups = @ARGV;

# Create the necessary control files in each subdir

foreach my $newsgroup (@newsgroups) {
	print "\nNewsgroup $newsgroup ...\n";

	my $v = new Vote(name => $newsgroup);
	my $vote_dir = $v->ng_dir();

	$v->write_voterule("config/voterule");

	my $ConfigFile ="$vote_dir/endtime.cfg";
	my $start_file ="$vote_dir/vote_start.cfg";

	if (-f $ConfigFile) {
		print "\tAlready has an endtime.cfg, skipping.\n";
		next;
	}

	$count++;

	my $vp_file = "$BaseDir/$newsgroup/voteperiod";
	if (!-f $vp_file) {
		$vp_file = "./config/voteperiod";
	}

	if (open(VP, "<$vp_file")) {
		$VotePeriod = <VP>;
		chomp($VotePeriod);
		close(VP);
	} else {
		die "No $vp_file";
	}

	# Find the finish date for votes according to the VD (vote duration)
	my $VD = $VotePeriod * 86400;
	my $start_time = time();

	# Find the gmt end time
	my($sec,$min,$hour,$mday,$mon,$year) = gmtime($start_time + $VD);

	# Extend it to nearly midnight
	($hour,$min,$sec) = (23,59,59);
	my $then = timegm($sec,$min,$hour,$mday,$mon,$year);

	# Now make the human-readable one
	my $endtime = gmtime($then);
	print "\tVote ends $endtime\n";

	# And write to control file
	open(T, ">$ConfigFile");
	print T $then + 1, "\n";
	close(T);

	open(T, ">$start_file");
	print T $start_time, "\n";
	close(T);

	$v->audit("Setup vote to end at $endtime");
}


